
buildscript {
    ext.cubaVersion = '6.4.1'
    repositories {
        maven {
            url 'http://repository.haulmont.com:8587/nexus/content/groups/work'
            credentials {
                username(rootProject.hasProperty('repoUser') ? rootProject['repoUser'] : 'cuba')
                password(rootProject.hasProperty('repoPass') ? rootProject['repoPass'] : 'cuba123')
            }
        }
        
    }
    dependencies {
        classpath "com.haulmont.gradle:cuba-plugin:$cubaVersion"

        classpath "com.haulmont.cuba:cuba-global:$cubaVersion"

        
    }
}

def globalModule = project(':dashboard-global')
def coreModule = project(':dashboard-core')
def guiModule = project(':dashboard-gui')
def webModule = project(':dashboard-web')
def webToolkitModule = project(':dashboard-web-toolkit')
def webThemesModule= project(':dashboard-web-themes')

def servletApi = 'org.apache.tomcat:tomcat-servlet-api:8.0.26'


apply(plugin: 'idea')
apply(plugin: 'cuba')

cuba {
    artifact {
        group = 'com.audimex.dashboard'
        version = '0.1'
        isSnapshot = true
    }
    tomcat {
        dir = "$project.rootDir/build/tomcat"
    }
    ide {
        copyright = '''Copyright (c) 2016-$today.year Haulmont. All rights reserved.''' // Copyright Notice for IDEA project  
        vcs = 'Git'
    }
}

def hsql = 'org.hsqldb:hsqldb:2.2.9'

configure([globalModule, coreModule, guiModule, webModule, webToolkitModule]) {
    apply(plugin: 'java')
    apply(plugin: 'maven')
    apply(plugin: 'idea')
    apply(plugin: 'cuba')

    dependencies {
        testCompile('junit:junit:4.12')
    }

    task sourceJar(type: Jar) {
        from file('src')
        classifier = 'sources'
    }

    artifacts {
        archives sourceJar
    }
}

configure(globalModule) {
    task enhance(type: CubaEnhancing)
    
    
}

configure(coreModule) {

    configurations {
        jdbc
        dbscripts
    }

    dependencies {
        compile(globalModule)
        provided(servletApi)
        jdbc(hsql)
        testRuntime(hsql)

    }

    task cleanConf(description: 'Cleans up conf directory') << {
        def dir = new File(cuba.tomcat.dir, '/conf/dashboard-core')
        if (dir.isDirectory()) {
            ant.delete(includeemptydirs: true) {
                fileset(dir: dir, includes: '**/*', excludes: 'local.app.properties')
            }
        }
    }

    task deploy(dependsOn: [assemble, cleanConf], type: CubaDeployment) {
        appName = 'dashboard-core'
        appJars('dashboard-global', 'dashboard-core')
    }

    task createDb(dependsOn: assembleDbScripts, description: 'Creates local database', type: CubaDbCreation) {
        dbms = 'hsql'
        host = 'localhost'
        dbName = 'amxd'
        dbUser = 'sa'
        dbPassword = ''
    }

    task updateDb(dependsOn: assembleDbScripts, description: 'Updates local database', type: CubaDbUpdate) {
        dbms = 'hsql'
        host = 'localhost'
        dbName = 'amxd'
        dbUser = 'sa'
        dbPassword = ''
    }
}

configure(guiModule) {
    dependencies {
        compile(globalModule)

    }

    task deployConf(type: Copy) {
        from file('src')
        include "com/audimex/dashboard/**"
        into "$cuba.tomcat.dir/conf/dashboard"
    }
}

configure(webModule) {
    configurations {
        webcontent
    }

    dependencies {
        provided(servletApi)
        compile(guiModule)
        compile('org.vaadin.addons:dragdroplayouts:1.3.2.cuba.4')

    }
    
    jar {
        with copySpec {
            from sourceSets.main.allJava
            include "com/audimex/dashboard/web/toolkit/ui/client/**"
        }
    }
    
    task webArchive(type: Zip) {
        from file("$buildDir/web")
        from file('web')
        classifier = 'web'
    }

    artifacts {
        archives webArchive
    }

    task deployConf(type: Copy) {
        from file('src')
        include "com/audimex/dashboard/**"
        into "$cuba.tomcat.dir/conf/dashboard"
    }

    task clearMessagesCache(type: CubaClearMessagesCache) {
        appName = 'dashboard'
    }
    deployConf.dependsOn clearMessagesCache

    task cleanConf(description: 'Cleans up conf directory') << {
        def dir = new File(cuba.tomcat.dir, '/conf/dashboard')
        if (dir.isDirectory()) {
            ant.delete(includeemptydirs: true) {
                fileset(dir: dir, includes: '**/*', excludes: 'local.app.properties')
            }
        }
    }

    task deploy(dependsOn: [assemble, cleanConf], type: CubaDeployment) {
        appName = 'dashboard'
        appJars('dashboard-global', 'dashboard-gui', 'dashboard-web')
    }
    task buildScssThemes(type: CubaWebScssThemeCreation)
    task deployThemes(type: CubaDeployThemeTask, dependsOn: buildScssThemes)
    assemble.dependsOn buildScssThemes
}

configure(webToolkitModule) {
    dependencies {
        compile(webModule)


    }
    
    jar {
        from sourceSets.main.allJava
    }
    
    task buildWidgetSet(type: CubaWidgetSetBuilding) {
        widgetSetClass = 'com.audimex.dashboard.web.toolkit.ui.AppWidgetSet'
    }
    
    task debugWidgetSet(type: CubaWidgetSetDebug) {
        widgetSetClass = 'com.audimex.dashboard.web.toolkit.ui.AppWidgetSet'
    } 

    task webArchive(dependsOn: buildWidgetSet, type: Zip) {
        from file("$buildDir/web")
        classifier = 'web'
    }

    artifacts {
        archives webArchive
    }

    task deploy(dependsOn: buildWidgetSet) << {
        delete {
            "$cuba.tomcat.dir/webapps/dashboard/VAADIN/widgetsets"
        }
        copy {
            from "$buildDir/web"
            into "$cuba.tomcat.dir/webapps/dashboard"
        }
    }
}




configure(webThemesModule) {
    apply(plugin: 'java')
    apply(plugin: 'maven')
    apply(plugin: 'cuba')

    appModuleType = 'web-themes'

    buildDir = file('../build/scss-themes')

    sourceSets {
        main {
            java {
                srcDir '.'
            }
            resources {
                srcDir '.'
            }
        }
    }
}


task undeploy(type: Delete, dependsOn: ':dashboard-web:cleanConf') {
    delete("$cuba.tomcat.dir/shared")
    delete("$cuba.tomcat.dir/webapps/dashboard-core")
    delete("$cuba.tomcat.dir/webapps/dashboard")
}

task restart(dependsOn: ['stop', ':dashboard-core:deploy', ':dashboard-web:deploy', ':dashboard-web-toolkit:deploy'], description: 'Redeploys applications and restarts local Tomcat') << {
    ant.waitfor(maxwait: 6, maxwaitunit: 'second', checkevery: 2, checkeveryunit: 'second') {
        not {
            socket(server: 'localhost', port: '8787')
        }
    }
    start.execute()
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

apply from: 'extra.gradle'
